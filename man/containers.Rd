% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/containers.R
\name{get_containers}
\alias{get_containers}
\title{List containers}
\usage{
get_containers(container_id = NULL)

get_containers(container_id = NULL)

get_containers(container_id = NULL)
}
\arguments{
\item{container_id}{containers id}
}
\value{
data from containers endpoint

data from containers endpoint

data from containers endpoint
}
\description{
Containers are the backbone of sample management in Benchling. They represent physical containers, such as tubes or wells, that hold quantities of biological samples (represented by the batches inside the container). The container itself tracks its total volume, and the concentration of every batch inside of it.Containers are all associated with schemas, which define the type of the container (e.g. "Tube") along with the fields that are tracked.Like all storage, every container has a barcode that is unique across the registry.

Containers are the backbone of sample management in Benchling. They represent physical containers, such as tubes or wells, that hold quantities of biological samples (represented by the batches inside the container). The container itself tracks its total volume, and the concentration of every batch inside of it.Containers are all associated with schemas, which define the type of the container (e.g. "Tube") along with the fields that are tracked.Like all storage, every container has a barcode that is unique across the registry.

Containers are the backbone of sample management in Benchling. They represent physical containers, such as tubes or wells, that hold quantities of biological samples (represented by the batches inside the container). The container itself tracks its total volume, and the concentration of every batch inside of it.Containers are all associated with schemas, which define the type of the container (e.g. "Tube") along with the fields that are tracked.Like all storage, every container has a barcode that is unique across the registry.
}
